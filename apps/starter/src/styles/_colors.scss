
// Define primary color palette
$primary: (
  50: #e3f2fd,
  100: #bbdefb,
  200: #90caf9,
  300: #64b5f6,
  400: #42a5f5,
  500: #2196f3,
  600: #1e88e5,
  700: #1976d2,
  800: #1565c0,
  900: #0d47a1,
  default: #2196f3,
  contrast: (
    50: #000,
    100: #000,
    200: #000,
    300: #000,
    400: #000,
    500: #fff,
    600: #fff,
    700: #fff,
    800: #fff,
    900: #fff,
    default: #fff,
  ),
);

// Define secondary color palette
$secondary: (
  50: #fce4ec,
  100: #f8bbd0,
  200: #f48fb1,
  300: #f06292,
  400: #ec407a,
  500: #e91e63,
  600: #d81b60,
  700: #c2185b,
  800: #ad1457,
  900: #880e4f,
  default: #e91e63,
  contrast: (
    50: #000,
    100: #000,
    200: #000,
    300: #000,
    400: #000,
    500: #fff,
    600: #fff,
    700: #fff,
    800: #fff,
    900: #fff,
    default: #fff,
  ),
);

$primary-palette: (
  100: #e3f2fd,
  300: #64b5f6,
  500: #2196f3,
  700: #1976d2,
  contrast: #ffffff
);

$brand-palette: (
  100: #ffccbc,
  300: #ff7043,
  500: #ff5722,
  700: #e64a19,
  contrast: #000000
);

// Define other brand colors
$success: #4caf50;
$warning: #ff9800;
$error: #f44336;
$info: #03a9f4;

// Background colors
$background: (
  light: #ffffff,
  dark: #121212,
);

// Define primary contrast palette
$primary-contrast: (
  50: #000,
  100: #000,
  200: #000,
  300: #000,
  400: #000,
  500: #fff,
  600: #fff,
  700: #fff,
  800: #fff,
  900: #fff,
  default: #fff
);

// Function to get color from a palette
@function get-color($palette, $hue: default) {
  @return map-get($palette, $hue);
}

// Function to get contrast color for text
@function get-contrast-color($palette, $hue: default) {
  $contrast-map: map-get($palette, "contrast");
  @return map-get($contrast-map, $hue);
}

@function get-primary-color($shade: 500) {
  @return map-get($primary-palette, $shade);
}

@function get-brand-color($shade: 500) {
  @return map-get($brand-palette, $shade);
}

@function get-primary-contrast-color($shade: 500) {
  @if type-of($primary-contrast) != "map" {
    @error "get-primary-contrast-color(): Expected a map but got #{type-of($primary-contrast)}.";
    @return #fff;
  }

  @if map-has-key($primary-contrast, $shade) {
    @return map-get($primary-contrast, $shade);
  } @else {
    @warn "get-primary-contrast-color(): Shade #{$shade} is not in primary-contrast map.";
    @return #fff; // Fallback color
  }
}


// Example usage
$primary-color: get-color($primary);
$secondary-color: get-color($secondary);
$primary-contrast-default: get-contrast-color($primary);
$secondary-contrast-default: get-contrast-color($secondary);
